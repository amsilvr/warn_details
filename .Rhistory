is.na(allCounties) %>% sum()
allCounties %>% filter(is.na() == TRUE)
allCounties %>% filter(is.na(allCounties) == TRUE)
allCounties %>% filter(is.na(1) == TRUE)
allCounties %>% filter(is.na(1:12) == TRUE)
allCounties %>% filter(is.na(2) == TRUE)
allCounties %>% filter(is.na(7) == TRUE)
allCounties %>% filter(is.na(8) == TRUE)
allCounties %>% filter(is.na(9) == TRUE)
allCounties %>% filter(is.na(10) == TRUE)
allCounties %>% filter(is.na(11) == TRUE)
allCounties %>% filter(is.na(12) == TRUE)
allCounties %>% filter(is.na(2) == TRUE)
allCounties %>% filter(is.na(3) == TRUE)
allCounties %>% filter(is.na(AMBER) == TRUE)
allCounties %>% filter(is.na(AMBER) == TRUE) %>% group_by(STUSPS) %>% summarise(n = n())
allCounties %>% filter(is.na(FlashFlood) == TRUE) %>% group_by(STUSPS) %>% summarise(n = n())
allCounties %>% filter(is.na(Hurricane) == TRUE) %>% group_by(STUSPS) %>% summarise(n = n())
allCounties %>% filter(is.na(Other) == TRUE) %>% group_by(STUSPS) %>% summarise(n = n())
allCounties %>% filter(is.na(Total) == TRUE) %>% group_by(STUSPS) %>% summarise(n = n())
allCounties %>% filter(STUSPS in c("AK", "HI","PR","SD")) %>% group_by(STUSPS) %>% summarise(n = n())
allCounties %>% filter(STUSPS one_of(c("AK", "HI","PR","SD"))) %>% group_by(STUSPS) %>% summarise(n = n())
allCounties %>% filter(STUSPS == one_of(c("AK", "HI","PR","SD"))) %>% group_by(STUSPS) %>% summarise(n = n())
allCounties %>% filter(STUSPS in(c("AK", "HI","PR","SD"))) %>% group_by(STUSPS) %>% summarise(n = n())
allCounties %>% filter(STUSPS == "AK|HI|PR|SD"))) %>% group_by(STUSPS) %>% summarise(n = n())
allCounties %>% filter(grepl("AK|HI|PR|SD",STUSPS) == TRUE)) %>% group_by(STUSPS) %>% summarise(n = n())
allCounties %>% filter(grepl("AK|HI|PR|SD",STUSPS) == TRUE) %>% group_by(STUSPS) %>% summarise(n = n())
anti_join(alert_tally, allCounties, by = "GEOID") %>% select(GEOID, NAME, STUSPS)
anti_join(alert_tally, allCounties, by = "GEOID")
head(allCounties)
filter(counties_sf, STATEFP == '46')
filter(counties_sf, STATEFP == '46') %>% arrange(COUNYFP)
filter(counties_sf, STATEFP == '46') %>% arrange(COUNTYFP)
filter(fips_msg, GEOID == '46113') %>% left_join(msg2)
filter(fips_msg, GEOID == '46113') %>% left_join(msg2) %>% select(msg_id, areas)
filter(fips_msg, is.na(GEOID) == TRUE) %>% left_join(msg2) %>% select(msg_id, areas)
na_counties <- filter(fips_msg, is.na(GEOID) == TRUE) %>% left_join(msg2) %>% select(msg_id, areas)
na_counties <- filter(fips_msg, is.na(GEOID) == TRUE) %>% left_join(msg2) %>% select(areas) %>% str_split(",") %>% unlist() %>% unique()
na_counties
na_counties <- filter(fips_msg, is.na(GEOID) == TRUE) %>% left_join(msg2) %>% select(areas) %>%  unique()
na_counties
na_counties <- filter(fips_msg, is.na(GEOID) == TRUE) %>% left_join(msg2) %>% select(areas) %>%  unlist()
na_counties
na_counties <- filter(fips_msg, is.na(GEOID) == TRUE) %>% left_join(msg2) %>% select(areas) %>%  as.character()
na_counties
na_counties <- filter(fips_msg, is.na(GEOID) == TRUE) %>% left_join(msg2) %>% select(areas) %>%  as.character() %>% unlist()
na_counties
na_counties <- filter(fips_msg, is.na(GEOID) == TRUE) %>% left_join(all) %>% select(areas)
na_counties <- filter(fips_msg, is.na(GEOID) == TRUE) %>% left_join(msg2) %>% select(areas)
na_counties
t(allCounties)
t(na_counties)
t(na_counties) %>% unlist()
t(na_counties) %>% str_split(", ") %>% unlist()
na_counties <- t(na_counties) %>% str_split(", ") %>% unlist() %>% unique()
na_counties
area_find(na_counties)
map(na_counties, area_find)
map(na_counties, area_find) %>% unlist()
map(na_counties, area_find) %>% unlist() %>% as_tibble()
na_counties_tbl <- map(na_counties, area_find) %>% unlist() %>% as_tibble()
fips_lookup <- load_fips()
fips_lookup
filter(fips_lookup, areaname == "NM Dona Ana")
filter(fips_lookup, grepl("Dona Ana", areaname) == TRUE)
filter(fips_lookup, grepl("NM", areaname) == TRUE)
filter(fips_lookup, grepl("NM", areaname) == TRUE) %>% arrange(areaname)
na_counties_tbl
source('C:/Users/amsilverman/Box Sync/@Project Support/Data_Science/warn_details/CMAS_Clean_shiny.R', encoding = 'UTF-8')
na_counties <- filter(fips_msg, is.na(GEOID) == TRUE) %>% left_join(msg2) %>% select(msg_id, areas)
na_counties
filter(fips_msg, is.na(GEOID) == TRUE) %>% sum()
filter(fips_msg, is.na(GEOID) == TRUE)
rm(list = c("msg", "msg2", "fips_lookup"))
rm(alert_tally)
rm(fips_msg)
source('C:/Users/amsilverman/Box Sync/@Project Support/Data_Science/warn_details/CMAS_Clean_shiny.R', encoding = 'UTF-8')
filter(fips_msg, is.na(GEOID) == TRUE)
na_counties <- filter(fips_msg, is.na(GEOID) == TRUE) %>% left_join(msg2) %>% select(msg_id, areas)
na_counties
filter(fips_lookup, grepl("PR", areaname) == TRUE) %>% arrange(areaname)
filter(flatten_fips(), grepl("PR", areaname) == TRUE) %>% arrange(areaname)
filter(load_fips(), grepl("PR", areaname) == TRUE) %>% arrange(areaname)
PR <- filter(load_fips(), grepl("PR", areaname) == TRUE) %>% arrange(areaname)
head(PR)
head(na_counties)
PR <- filter(load_fips(), grepl("ñ", areaname) == TRUE) %>% arrange(areaname)
PR
rm(msg)
source('C:/Users/amsilverman/Box Sync/@Project Support/Data_Science/warn_details/CMAS_Clean_shiny.R', encoding = 'UTF-8')
na_counties <- filter(fips_msg, is.na(GEOID) == TRUE) %>% left_join(msg2) %>% select(msg_id, areas)
na_counties
PR <- filter(load_fips(), grepl("PR", areaname) == TRUE) %>% arrange(areaname)
head(PR, 78)
na_counties <- filter(fips_msg, is.na(GEOID) == TRUE) %>% left_join(msg2) %>% select(msg_id, areas)
na_counties
flatten_fips(na_counties$areas)
flatten_fips(na_counties)
flattened_na <- flatten_fips(na_counties)
flattened_na
na_counties <- flattened_na %>% filter(is.na(GEOID) == TRUE) %>% left_join(msg2)
na_counties
na_counties %>% select(areas)
View(PR)
PR %>% filter(grepl("ó|ñ|á|ü"))
PR %>% filter(grepl("ó|ñ|á|ü", areas) == TRUE)
PR %>% filter(grepl("ó|ñ|á|ü", areaname) == TRUE)
PR %>% filter(grepl("ó|á|ü", areaname) == TRUE)
allCounties %>% filter(grepl("ó|á|ü", areaname) == TRUE)
allCounties %>% filter(grepl("ó|á|ü", NAME) == TRUE)
allCounties %>% filter(grepl("ó|á|ü|ñ", NAME) == TRUE)
rm(msg)
source('C:/Users/amsilverman/Box Sync/@Project Support/Data_Science/warn_details/CMAS_Clean_shiny.R', encoding = 'UTF-8')
sum(is.na(alert_tally))
alert_tally[is.na(alert_tally)]
na_counties <- filter(fips_msg, is.na(GEOID) == TRUE) %>% left_join(msg2) %>% select(msg_id, areas)
na_counties
rm(alert_tally)
rm(msg)
rm(flattened_na)
rm(PR)
rm(allCounties)
source('C:/Users/amsilverman/Box Sync/@Project Support/Data_Science/warn_details/CMAS_Clean_shiny.R', encoding = 'UTF-8')
na_counties <- filter(fips_msg, is.na(GEOID) == TRUE) %>% left_join(msg2) %>% select(msg_id, areas)
na_counties
rm(list = ls())
source('C:/Users/amsilverman/Box Sync/@Project Support/Data_Science/warn_details/CMAS_Clean_shiny.R', encoding = 'UTF-8')
na_counties <- filter(fips_msg, is.na(GEOID) == TRUE) %>% left_join(msg2) %>% select(msg_id, areas)
msg2 %>% filter(rec_time == ymd('2017-09-20'))
msg2 %>% filter(ymd(rec_time) == ymd('2017-09-20'))
msg2 %>% filter(rec_time>=ymd('2017-09-20'))
msg2 %>% filter(rec_time>=ymd_hm('2017-09-20 2200'))
runApp()
allCounties <- left_join(counties_sf, alert_tally)
c_shp <- unzip("data/county_shape_file.zip", exdir = "data")
state_sf <- map_states()
counties_sf <- read_sf(c_shp[grep("shp$", c_shp)]) %>%
as.data.frame() %>% #to fix July 25 problem with the join.sf methods
#left_join(state_sf) %>%
inner_join(lsad_lookup()) %>%
select(STATEFP, COUNTYFP, GEOID, NAME, description, geometry) %>%
left_join(state_sf %>% select(STATEFP, STUSPS)) %>%
st_sf(sf_column_name = 'geometry') %>%
st_transform('+proj=longlat +datum=WGS84')
allCounties <- left_join(counties_sf, alert_tally)
names(allCounties)
runApp()
quantile(allCounties$AMBER, probs = seq(0,1,.12))
quantile(allCounties$AMBER, probs = seq(0,1,.12),na.rm = TRUE)
quantile(allCounties$Total, probs = seq(0,1,.12),na.rm = TRUE)
quantile(allCounties$Total, probs = seq(0,1,.12),na.rm = FALSE)
sum(is.na(allCounties$Total))
allCounties %>% filter(is.na(Total) == TRUE)
allCounties[is.na(allCounties)] <- 0
quantile(allCounties$Total, probs = seq(0,1,.12),na.rm = FALSE)
quantile(allCounties$AMBER, probs = seq(0,1,.12),na.rm = FALSE)
unique(quantile(allCounties$AMBER, probs = seq(0,1,.12),na.rm = FALSE))
runApp()
colorQuantile("YlOrRd",
domain = allCounties$Total,
probs = seq(0,1,.12),
na.color = "#fefefe")
colorQuantile("YlOrRd",
domain = allCounties$Total,
probs = unique(seq(0,1,.12)),
na.color = "#fefefe")
colorQuantile("YlOrRd",
domain = allCounties$FlashFlood,
probs = seq(0,1,.12),
na.color = "#fefefe")
quantile(allCounties$FlashFlood, probs = seq(0,1,.12),na.rm = FALSE)
unique(quantile(allCounties$FlashFlood, probs = seq(0,1,.12),na.rm = FALSE))
quantile(allCounties$FlashFlood, probs = unique(seq(0,1,.12)),na.rm = FALSE)
runApp()
?leaflet::setView
quostate <- quo('Maine')
quostate
state_sf %>% filter(NAME == !!quostate)
state_sf %>% filter(NAME == !!quostate) %>% st_bbox()
state_sf %>% filter(NAME == !!quostate) %>% select(geometry)
state_sf %>% filter(NAME == !!quostate) %>% select(geometry) %>% st_bbox()
state_sf %>% filter(NAME == !!quostate) %>% select(geometry) %>% st_sf() %>% st_bbox()
state_sf %>% filter(NAME == !!quostate) %>% select(geometry) %>% st_sf() %>% st_bbox() %>% str()
state_sf %>% filter(NAME == !!quostate) %>% select(geometry) %>% st_sf() %>% st_bbox()[1]
x <- state_sf %>% filter(NAME == !!quostate) %>% select(geometry) %>% st_sf() %>% st_bbox()
x[1]
x[2]
runApp()
state_sf %>% filter(NAME == 'Alabama') %>% st_sf() %>% st_bbox()
state_sf %>% filter(NAME == 'Maine') %>% st_sf() %>% st_bbox()
state_sf %>% filter(NAME == 'Maine')
identical(state_sf %>% filter(NAME == 'Maine'), state_sf %>% filter(NAME == 'Alabama'))
identical(state_sf %>% filter(NAME == 'Maine') %>% select(geometry), state_sf %>% filter(NAME == 'Alabama') %>% select(geometry))
state_sf %>% filter(NAME == 'Maine') %>% sf::plot_sf()
state_sf %>% filter(NAME == 'Maine') %>% st_sf %>% sf::plot_sf()
state_sf %>% plot_sf()
state_sf %>% plot()
state_sf %>% st_sf %>% sf_plot()
state_sf %>% st_sf %>% plot_sf()
?plot_sf
# multipolygon
r10 = matrix(rep(c(0,10),each=5),5)
pl1 = list(outer, hole1, hole2)
pl2 = list(outer+10, hole1+10, hole2+10)
pl3 = list(outer+r10, hole1+r10, hole2+r10)
mpo1 = st_multipolygon(list(pl1,pl2))
mpo2 = st_multipolygon(list(pl3))
mpo = st_sf(a=2:3, b=st_sfc(mpo1,mpo2))
plot(mpo, col = mpo$a, border = rev(mpo$a), lwd = 2)
outer = matrix(c(0,0,10,0,10,10,0,10,0,0),ncol=2, byrow=TRUE)
hole1 = matrix(c(1,1,1,2,2,2,2,1,1,1),ncol=2, byrow=TRUE)
hole2 = matrix(c(5,5,5,6,6,6,6,5,5,5),ncol=2, byrow=TRUE)
pl1 = st_polygon(list(outer, hole1, hole2))
pl2 = st_polygon(list(outer+10, hole1+10, hole2+10))
po = st_sf(a = 2:3, st_sfc(pl1,pl2))
plot(po, col = po$a, border = rev(po$a), lwd=3)
# multipolygon
r10 = matrix(rep(c(0,10),each=5),5)
pl1 = list(outer, hole1, hole2)
pl2 = list(outer+10, hole1+10, hole2+10)
pl3 = list(outer+r10, hole1+r10, hole2+r10)
mpo1 = st_multipolygon(list(pl1,pl2))
mpo2 = st_multipolygon(list(pl3))
mpo = st_sf(a=2:3, b=st_sfc(mpo1,mpo2))
plot(mpo, col = mpo$a, border = rev(mpo$a), lwd = 2)
print(st_sf)
print(state_sf)
print(state_sf[1,4])
max(state_sf[1,4])
plot(state_sf[1,4])
state_sf %>% filter(NAME == 'Maine') %>% plot(,4)
state_sf %>% filter(NAME == 'Maine') %>% plot()
state_sf %>% filter(NAME == 'Maine') %>% select(geometry) %>% plot()
state_sf %>% filter(NAME == 'Alabama') %>% select(geometry) %>% plot()
inputState <- 'Nebraska'
quostate
quostate <- inputState
quostate <- quo(inputState)
quostate
!!quostate
UQ(quostate)
state_sf %>% filter(NAME == (!!quostate))
state_sf %>% filter(NAME == !!quostate)
state_sf %>% filter(NAME == !!quostate) %>% select(geometry) %>% unlist()
state_sf %>% filter(NAME == !!quostate) %>% select(geometry) %>% unlist() %>% max()
state_sf %>% filter(NAME == !!quostate) %>% select(geometry) %>% unlist() %>% quantile()
state_sf %>% filter(NAME == !!quostate) %>% select(geometry) %>% unlist() %>% table()
state_sf %>% filter(NAME == !!quostate) %>% select(geometry) %>% unlist() %>% min()
state_sf %>% filter(NAME == !!quostate) %>% select(geometry) %>% unlist() %>% max()
state_sf %>% filter(NAME == !!quostate) %>% select(geometry) %>% unlist() %>% names()
state_sf %>% filter(NAME == !!quostate) %>% select(geometry) %>% unlist() %>% names()[207]
x <- state_sf %>% filter(NAME == !!quostate) %>% select(geometry) %>% unlist() %>% names()
x[207]
x
x <- state_sf %>% filter(NAME == !!quostate) %>% select(geometry) %>% unlist()
str(x)
x[207]
x[208]
min(x[1:207])
max(x[1:207])
quostate <- quo('Michigan')
x <- state_sf %>% filter(NAME == !!quostate) %>% select(geometry) %>% unlist()
x[length(x)/2]
min(x[1:length(x)/2])
max(x[1:length(x)/2])
min(x[length(x)/2]+1:length(x))
max(x[length(x)/2]+1:length(x))
max(x[length(x)/2+1:length(x)])
max(x[(length(x)/2+1):length(x)])
min(x[(length(x)/2+1):length(x)])
runApp()
state_sf %>% mutate(geo_ln = length(unlist(geometry)))
x <- state_sf %>% filter(NAME == !!quostate) %>% select(geometry) %>% unlist() %>% length()
x
length(state_sf[,4])
length(state_sf[1,4])
length(unlist(state_sf[1,4]))
length(unlist(state_sf[2,4]))
length(unlist(state_sf[3,4]))
map_dbl(select(state_sf,4),length)
map2_dbl(select(state_sf,4),length)
state_sf %>% select(geometry) %>% unlist() %>% map(length)
state_sf %>% select(geometry) %>% map(unlist) %>% map(length)
state_sf %>% select(geometry) %>% map(unlist)
state_sf %>% select(geometry) %>% map2(length)
state_sf %>% select(geometry) %>% map(.f = length())
state_sf %>% select(geometry)
state_sf %>% select(geometry) %>% apply(unlist)
state_sf %>% select(geometry) %>% apply(2,unlist)
state_sf %>% select(geometry) %>% apply(2,unlist, recursive = FALSE)
x <- state_sf %>% select(geometry) %>% apply(2,unlist, recursive = FALSE)
str(x)
x <- state_sf %>% select(geometry) %>% lapply(length)
x
x <- state_sf %>% select(geometry) %>% lapply(unlist, recursive = FALSE) %>% lapply(length)
x
rm(list = ls())
runApp()
bounds <- state_sf %>%
filter(NAME == 'Alaska') %>%
select(geometry)
state_sf <- map_states()
bounds <- state_sf %>%
filter(NAME == 'Alaska') %>%
select(geometry)
length(bounds)
runApp()
head(state_sf)
head(st_sf(state_sf))
plot(st_sf(state_sf))
leaflet(data = st_sf(state_sf))
leaflet(data = st_sf(state_sf)) %>% addPolygons()
runApp()
state_sf %>% filter(NAME == 'Florida') %>% st_sf() %>% plot()
state_sf %>% filter(NAME == 'Florida') %>% st_sf() %>% st_bbox()
state_sf %>% filter(NAME == 'Florida') %>% st_sf() %>% leaflet() %>% fitBounds() %>% addPolygons()
state_sf %>% filter(NAME == 'Florida') %>% st_sf() %>% leaflet() %>% fitBounds(st_bbox(.)) %>% addPolygons()
state_sf %>% filter(NAME == 'Florida') %>% st_sf() %>% leaflet() %>% fitBounds(st_bbox(.)[1]) %>% addPolygons()
state_sf %>% filter(NAME == 'Florida') %>% st_sf() %>% leaflet() %>% fitBounds(lat1 = st_bbox(geometry)[1]) %>% addPolygons()
state_sf %>% filter(NAME == 'Florida') %>% st_sf() %>% st_bbox() %>% as_double()
state_sf %>% filter(NAME == 'Florida') %>% st_sf() %>% st_bbox() %>% numeric()
state_sf %>% filter(NAME == 'Florida') %>% st_sf() %>% st_bbox() %>% as.list()
fl <- state_sf %>% filter(NAME == 'Florida') %>% st_sf() %>% st_bbox() %>% as.list()
leaflet(fl)
leaflet(fl) %>% addPolygons()
fl %>% st_sf() %>% leaflet() %>% addPolygons()
fl
fl <- state_sf %>% filter(NAME == 'Florida') %>% st_sf()
fl_bounds <- fl %>% st_bbox() %>% as.list()
fl %>% st_sf() %>% leaflet() %>% addPolygons()
fl %>% st_sf() %>% leaflet() %>% addPolygons() %>% fitBounds(lng1 = fl_bounds[1], lng2 = fl_bounds[3],lat1 = fl_bounds[2], lat2 = fl_bounds[4])
fl %>% st_sf() %>% leaflet() %>% addPolygons() %>% fitBounds(lng1 = fl_bounds[2], lng2 = fl_bounds[4],lat1 = fl_bounds[1], lat2 = fl_bounds[3])
fl %>% st_sf() %>% leaflet() %>% addPolygons() %>% fitBounds(lng1 = fl_bounds[3], lng2 = fl_bounds[2],lat1 = fl_bounds[4], lat2 = fl_bounds[2])
fl %>% st_sf() %>% leaflet() %>% addPolygons()
state.center
?setMaxBounds
fl
fl@bbox
fl$bbox
attr(fl)
attr(fl,which = 'bbox')
attr(fl,which = bbox)
attributes(fl)
fl %>% st_bbox() %>% unlist()
fl %>% st_bbox() %>% lst()
fl %>% st_bbox() %>% char()
fl %>% st_bbox() %>% numeric()
fl %>% st_bbox() %>% unlist() %>% numeric()
fl %>% st_bbox()
fl %>% st_bbox()$xmin
st_bbox(fl)$xmin
xmin(st_bbox(fl))
fl %>% st_bbox() %>% names
fl_bounds <- fl %>% st_bbox()
fl_bounds$xmin
fl_bounds[1]
fl %>% st_sf() %>% leaflet() %>% addPolygons() %>% fitBounds(fl_bounds[1:4])
fl %>% st_sf() %>% leaflet() %>% addPolygons() %>% fitBounds(fl_bounds[1],fl_bounds[2],fl_bounds[3],fl_bounds[4] )
names(fl_bounds) <- c("lat1","lng1", 'lat2', 'lng2')
fl %>% st_sf() %>% leaflet() %>% addPolygons() %>% fitBounds(fl_bounds)
fl %>% st_sf() %>% leaflet() %>% addPolygons() %>% fitBounds(fl_bounds[1],fl_bounds[3],fl_bounds[2],fl_bounds[4] )
fl %>% st_sf() %>% leaflet() %>% addPolygons() %>% fitBounds(fl_bounds[3],fl_bounds[1],fl_bounds[4],fl_bounds[2] )
class(fl)
fl %>%  leaflet() %>% addPolygons() %>% fitBounds(fl_bounds[3],fl_bounds[1],fl_bounds[4],fl_bounds[2] )
fl %>%  leaflet() %>% addPolygons()
bounds <- fl %>% select(geometry) %>% unlist()
fl %>% st_sf() %>% leaflet() %>% addPolygons() %>%
fitBounds(lng1 = min(bounds[1:(length(bounds)/2)]),
lat1 = min(bounds[((length(bounds)/2) + 1):length(bounds)]),
lng2 = max(bounds[1:(length(bounds)/2)]),
lat2 = max(bounds[((length(bounds)/2) + 1):length(bounds)]))
max(bounds)
min(bounds)
st_bbox(fl)
fl <- state_sf %>% filter(NAME == 'Florida') %>% as.data.frame()
fl
fl$geometry %>% unlist()
fl$geometry %>% unlist() %>% max()
fl$geometry %>% unlist() %>% length()
fl
fl$geometry
bounds <- fl %>% select(geometry)
class(bounds)
bounds
bounds <- fl %>% select(geometry) %>% st_sf
bounds
bounds %>% st_bbox() %>% unlist() %>%
bounds %>% st_bbox() %>% unlist()
bounds <- bounds %>% st_bbox() %>%list()
bounds
bounds[[1,2]]
bounds[[1]][[1]]
runApp()
gc()
fl_bounds
fl_bounds <- state_sf %>%
filter(NAME == 'Florida') %>%
select(geometry) %>%
st_bbox() %>%
list()
fl_bounds <- state_sf %>%
filter(NAME == 'Florida') %>%
select(geometry) %>%
st_bbox() %>%
list()
fl_bounds <- state_sf %>% st_sf() %>%
filter(NAME == 'Florida') %>%
select(geometry) %>%
st_bbox() %>%
list()
fl_bounds
fl_bounds[[1]]
fl_bounds[[1]][[1]]
fl
leaflet(fl) %>% addPolygons()
fl %>% st_sf() %>% leaflet() %>% addPolygons()
fl %>% st_sf() %>% leaflet() %>% addPolygons() %>%
fitBounds(fl_bounds[[1]][[1]],fl_bounds[[1]][[2]],fl_bounds[[1]][[3]],fl_bounds[[1]][[4]])
runApp()
fl_bounds[[]][[1]]
unlist(fl_bounds)
fl_ul <- unlist(fl_bounds)
fl_bounds[[1]]
fl_bounds[1]
fl_bounds[1,1]
fl_ul[[1]]
fl_ul[[2]]
fl_bounds <- state_sf %>% st_sf() %>%
filter(NAME == 'Florida') %>%
select(geometry) %>%
st_bbox()
fl_bounds[[1]]
fl_bounds[[2]]
runApp()
exit()
q()
source('C:/Users/amsilverman/Box Sync/@Project Support/Data_Science/warn_details/_Monthly_Message_Copy.R')
NewCMASImport()
shiny::runApp()
c_shp <- unzip("data/county_shape_file.zip", exdir = "data")
state_sf <- map_states()
counties_sf <- read_sf(c_shp[grep("shp$", c_shp)]) %>%
as.data.frame() %>% #to fix July 25 problem with the join.sf methods
inner_join(lsad_lookup()) %>%
select(STATEFP, COUNTYFP, GEOID, NAME, description, geometry) %>%
left_join(state_sf %>% select(STATEFP, STUSPS)) %>%
st_sf(sf_column_name = 'geometry') %>%
st_transform('+proj=longlat +datum=WGS84')
allCounties <- left_join(counties_sf, tally_alerts(msg2, fips_msg,
input$dateRange[1],
input$dateRange[2]))
allCounties <- left_join(counties_sf, alert_tally)
is.na(allCounties)
sum(is.na(allCounties))
allCounties[is.na(allCounties)]
allCounties %>% filter(is.na(Total) == TRUE)
filter(fips_msg GEOID == '72033')
filter(fips_msg, GEOID == '72033')
filter(fips_msg, is.na(GEOID) == TRUE) %>% select(msg_id)
filter(fips_msg, is.na(GEOID) == TRUE)
filter(fips_msg, GEOID == 72033)
filter(fips_msg, GEOID == '72033')
filter(fips_msg, GEOID == '72111')
filter(fips_msg, GEOID == '72021')
allCounties[is.na(allCounties)] <- 0
head(allCounties)
tbl(NAME = 'Alaska')
as_tbl(NAME = 'Alaska')
as.tbl(NAME = 'Alaska')
as.data.frame(NAME = 'Alaska')
as.list(NAME = 'Alaska')
as.list('NAME' = 'Alaska')
list('NAME' = 'Alaska')
list('NAME' = 'Alaska') %>% left_join(state_sf)
list('NAME' = 'Alaska') %>% as.data.frame() %>% left_join(state_sf)
allCounties %>% filter(STATEFP == 'Alaska')
x <- list('NAME' = 'Alaska') %>% as.data.frame() %>% left_join(state_sf)
x
x <- list('NAME' = 'Alaska') %>% as.character() %>% left_join(state_sf)
x <- list('NAME' = 'Alaska') %>% data.frame() %>% left_join(state_sf)
x <- list('NAME' = 'Alaska') %>% data_frame() %>% left_join(state_sf)
x <- list('NAME' = 'Alaska') %>% data_frame()
x
x <- list('NAME' = 'Alaska') %>% tbl() %>% left_join(state_sf)
x <- list('NAME' = 'Alaska') %>% data.frame(stringsAsFactors = FALSE)) %>% left_join(state_sf)
x <- list('NAME' = 'Alaska') %>% data.frame(stringsAsFactors = FALSE) %>% left_join(state_sf)
filter(allCounties, STATEFP == loc_id) %>%
select(NAME) %>%
st_set_geometry(NULL) %>%
paste(collapse = " ")
filter(allCounties, STATEFP == '02') %>%
select(NAME) %>%
st_set_geometry(NULL) %>%
paste(collapse = " ")
filter(state_sf, STATEFP == '02') %>%
select(NAME) %>%
st_set_geometry(NULL) %>%
paste(collapse = " ")
filter(state_sf, STATEFP == '02') %>%
select(NAME) %>%
paste(collapse = " ")
runApp()
st_id <- quo('Alaska')
loc_id <- state_sf %>%
filter(STATEFP == !!st_id) %>%
select(STATEFP)
loc_id
loc_id <- state_sf %>%
filter(NAME == !!st_id) %>%
select(STATEFP)
loc_id
runApp()
