tempfile()
dir(tempfile())
greet <- function(name) {
"How do you do, name?"
}
greet(Aaron)
greet <- function(name) {
paste0("How do you do,",name, "?")
}
greet(Aaron)
greet("Aaron")
greet <- function(name) {
glue::glue("How do you do, {name}?")
}
greet("Aaron")
library(tidyverse)
df1 <- tibble(x = 1:3)
a <- 10
mutate_y(df1)
mutate_y <- function(df){
mutate(df, y = a + x)
}
mutate_y(df1)
mutate_y2 <- function(df){
mutate(df, y = .data$a + .data$x)
}
mutate_y2(df1)
df <- tibble(
g1 = c(1,1,2,2,2),
g2 = c(1,2,1,2,1),
a = sample(5),
b = sample(5)
)
df
df %>%
group_by(g1) %>%
summarize(a = mean(a))
my_summarize <- function(df, group_var){
df %>%
group_by(group_var) %>%
summarize(a = mean(a))
}
my_summarize(df, g1)
quo(g1)
quo(a + b + c)
my_summarize <- function(df, group_var){
df %>%
group_by(!!group_var) %>%
summarize(a = mean(a))
}
my_summarize(df, g1)
my_summarize(df, quo(g1))
enquo
my_summarize <- function(df, group_var){
group_by <- enquo(group_by)
print(group_by)
df %>%
group_by(!!group_var) %>%
summarize(a = mean(a))
}
my_summarize(df, g1)
my_summarize <- function(df, group_var){
group_by <- enquo(group_by)
print(group_by)
df %>%
group_by(!!group_by) %>%
summarize(a = mean(a))
}
my_summarize(df, g1)
my_summarize <- function(df, group_by){
group_by <- enquo(group_by)
print(group_by)
df %>%
group_by(!!group_by) %>%
summarize(a = mean(a))
}
my_summarize(df, g1)
summarize(df, mean = mean(a), sum = sum(a), n = n())
summarize(df, mean = mean(a * b), sum = sum(a * b), n = n())
my_var <- quo(a)
summarize(df, mean = mean(!!my_var), sum = sum(!!my_var), n = n())
quo(summarize(df,
mean = mean(!!my_var),
sum = sum(!!my_var),
n = n())
)
my_summarize2 <- function(df, expr){
expr <- enquo(expr)
summarize(df,
mean = mean(!!expr),
sum = sum(!!expr),
n = n())}
my_summarize2(df, a*b)
my_summarize2(df, a)
mutate(df, mean_a = mean(a), sum_a = sum(a))
mutate(df, mean_b = mean(b), sum_b = sum(b))
library(rlang)
my_mutate <- function(df, expr){
expr <- enquo(expr)
mean_name <- paste0("mean_",quo_name(expr))
sum_name <- paste0("sum_",quo_name(expr))
mutate(df,
!!mean_name := mean(!!expr),
!!sum_name := sum(!!expr)
)
}
my_mutate(df, a)
my_mutate(df, b)
my_mutate(df, a*b)
my_summarize3 <- function(df, ...){
group_by <- quos(...)
df %>%
group_by(!!!group_by) %>%
summarize(a = mean(a))
}
my_summarize3(df, g1, g2)
?`!!!`
args <- list(na.rm = TRUE, trim = .25)
quo(mean(x, !!! args))
args
args <- list(quo(x), na.rm = TRUE, trim = .25)
args
quo(mean(!!! args))
disp ~ cyl + drat
disp
toupper(letters[1:5])
quote(toupper(letters[1:5]))
f <- function(x){quo(x)}
x1 <- f(10)
x1
x2 <- f(100)
x2
get_env(x1)
get_env(x2)
eval_tidy(x1)
eval_tidy(x2)
user_var <- 1000
mtcars %>% summarize(cyl = mean(cyl) + user_var)
mtcars %>% summarize(cyl = mean(cyl) * user_var)
var <- ~toupper(letters[1:5])
var
get_expr(var)
get_env(var)
quo(toupper(letters[1:5]))
quo(toupper(!!letters[1:5]))
quo(toupper(UQ(letters[1:5])))
my_mutate <- function(x) {
mtcars %>%
select(cyl) %>%
slice(1:4) %>%
mutate(cyl2 = cyl + (!! x))
}
my_mutate(4)
my_mutate(15)
f <- function(x) quo(x)
expr1 <- f(100)
expr1
expr2 <- f(10)
my_mutate(expr1)
my_mutate(expr2)
quo(filter(df, UQE(my_var) == 1))
x <-  y
install.packages("tibble")
install.packages
?install.packages
getOption("repos")
?setRepositories
R.home()
edit(paste0(R.home(),"etc/repositories"))
install.packages("tidyverse")
library(tibble)
tribble(~Film, ~Year, "A New Hope", 1977, "Empire Strikes back", 1980, "
Return of the Jedi", 1983)
tribble(~Film, ~Year, "A New Hope", 1977, "Empire Strikes back", 1980, "Return of the Jedi", 1983)
tibble(~Film, ~Year, "A New Hope", 1977, "Empire Strikes back", 1980, "Return of the Jedi", 1983)
as_tibble(mtcars)
quantiles <- quantile(mtcars$hp, probs ~ c(.1,.25,.5,.75,.9))
quantiles <- quantile(mtcars$hp, probs = c(.1,.25,.5,.75,.9))
quantiles
enframe(quantiles, "quantile", "value")
df <- as.data.frame(replicate(16,2:200))
df
df %>% setNames(letters)
library(tidyverse)
df %>% setNames(letters)
df <- as.data.frame(replicate(26,1:200))
head(df)
df %>% setNames(letters)
df %>% as_tibble()
df <- df %>% setNames(letters) %>% as_tibble()
df
glimpse(df)
df <- tibble(comment = "original", x = 1:2, x_squared = x ^ 2)
df
df <- df %>%
add_row(comment = "append", x = 3:4, x_squared = x^2) %>%
add_row(comment = "prepend", x = 0, x_squared = x^2, .before = 1)
df
as_tibble(mtcars)
mtcars %>% as_tibble() %>% rownames_to_column("model")
voice.part
??voice.part
library(devtools)
install_github("RhoInc/CRANsearcher")
library(CRANsearcher)
q()
install.packages("CRANsearcher")
CRANsearcher:::CRANsearcher()
shinyjs:::colourPickerAddin()
install.packages("shinyapps")
rsconnect::setAccountInfo(name='silverman', token='4A1FB98FFF5566E78191A94411A1A3CC', secret='3XSzBbrPE5CWN0oXz+jNEURWSl1JnjqkJlqFK/Gr')
library(rsconnect)
rsconnect::setAccountInfo(name='silverman', token='4A1FB98FFF5566E78191A94411A1A3CC', secret='3XSzBbrPE5CWN0oXz+jNEURWSl1JnjqkJlqFK/Gr')
rsconnect::setAccountInfo(name='silverman', token='C6AA4FA072E83C0C8D37343501795579', secret='YW+rh9l90f76teH7q6eY1aW5JdKV2lDy5RtYaieA')
remove.packages("rsconnect")
rsconnect::setAccountInfo(name='silverman', token='C6AA4FA072E83C0C8D37343501795579', secret='YW+rh9l90f76teH7q6eY1aW5JdKV2lDy5RtYaieA')
install.packages("rsconnect")
rsconnect::setAccountInfo(name='silverman', token='C6AA4FA072E83C0C8D37343501795579', secret='YW+rh9l90f76teH7q6eY1aW5JdKV2lDy5RtYaieA')
setwd("C:/Users/amsilverman/Box Sync/@Project Support/Data_Science/warn_details")
install.packages('shiny')
install.packages("DT")
shiny::runApp()
runApp()
install.packages("sf")
shiny::runApp()
runApp()
packrat::set_opts(use.cache = TRUE)
shiny::runApp()
filter(msg2, type == "AMBER", grepl(" AMBER ", msg2$wea, ignore.case = TRUE) == FALSE)
false_amber <- filter(msg2, type == "AMBER", grepl(" AMBER ", msg2$wea, ignore.case = TRUE) == FALSE)
false_amber$wea
false_amber <- filter(msg2, type == "AMBER", grepl("\wAMBER\w ", msg2$wea, ignore.case = TRUE) == TRUE)
false_amber <- filter(msg2, type == "AMBER", grepl("\\wAMBER\\w ", msg2$wea, ignore.case = TRUE) == TRUE)
false_amber
false_amber <- filter(msg2, type == "AMBER", grepl(" AMBER ", msg2$wea, ignore.case = TRUE) == FALSE)
false_amber$wea
q()
