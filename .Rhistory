install.packages("rsconnect")
rsconnect::setAccountInfo(name='silverman', token='C6AA4FA072E83C0C8D37343501795579', secret='YW+rh9l90f76teH7q6eY1aW5JdKV2lDy5RtYaieA')
setwd("C:/Users/amsilverman/Box Sync/@Project Support/Data_Science/warn_details")
install.packages('shiny')
install.packages("DT")
shiny::runApp()
runApp()
install.packages("sf")
shiny::runApp()
runApp()
packrat::set_opts(use.cache = TRUE)
shiny::runApp()
filter(msg2, type == "AMBER", grepl(" AMBER ", msg2$wea, ignore.case = TRUE) == FALSE)
false_amber <- filter(msg2, type == "AMBER", grepl(" AMBER ", msg2$wea, ignore.case = TRUE) == FALSE)
false_amber$wea
false_amber <- filter(msg2, type == "AMBER", grepl("\wAMBER\w ", msg2$wea, ignore.case = TRUE) == TRUE)
false_amber <- filter(msg2, type == "AMBER", grepl("\\wAMBER\\w ", msg2$wea, ignore.case = TRUE) == TRUE)
false_amber
false_amber <- filter(msg2, type == "AMBER", grepl(" AMBER ", msg2$wea, ignore.case = TRUE) == FALSE)
false_amber$wea
q()
library(tidyverse)
source('C:/Users/amsilverman/Box Sync/@Project Support/Data_Science/warn_details/CMAS_Clean_shiny.R', encoding = 'UTF-8')
source('C:/Users/amsilverman/Box Sync/@Project Support/Data_Science/warn_details/CMAS_Clean_shiny.R', encoding = 'UTF-8', echo=TRUE)
rm(list = ls())
source('C:/Users/amsilverman/Box Sync/@Project Support/Data_Science/warn_details/CMAS_Clean_shiny.R', encoding = 'UTF-8', echo=TRUE)
shiny::runApp()
runApp()
?DT::datatable
runApp()
max(msg$rec_time)
?a
runApp()
max(msg$rec_time) %>% make_datetime()
max(msg$rec_time) %>% day()
max(msg$rec_time) %>% date()
?date
max(msg$rec_time) %>% time()
max(msg$rec_time) %>% month() %>% day() %>% year()
max(msg$rec_time) %>% month() %>% day(.) %>% year(.)
max(msg$rec_time) %>% month()
max(msg$rec_time) %>% month(label = TRUE)
paste(month(max(msg$rec_time)label = TRUE), day(max(msg$rec_time)), year(max(msg$rec_time))
paste(month(max(msg$rec_time),label = TRUE), day(max(msg$rec_time)), year(max(msg$rec_time))
)
runApp()
?formatDate
?DT:::DateMethods
DT:::DateMethods
runApp()
?formatStyle
runApp()
?year
?hour
rt <- time(msg[1,1])
rt
hour(rt)
rt <- msg[1,1]
rt
rt %>%
paste0(
month(label = TRUE,abbr = FALSE), " ",
day(), ", ",
year(), " ",
" at ",
hour(), ":",
minute()
)
%>%
paste0(
month(rt,label = TRUE,abbr = FALSE), " ",
day(rt), ", ",
year(rt), " ",
" at ",
hour(rt), ":"
minute(rt)
paste0(
month(rt,label = TRUE,abbr = FALSE), " ",
day(rt), ", ",
year(rt), " ",
" at ",
hour(rt), ":"
minute(rt)
paste0(
month(rt,label = TRUE,abbr = FALSE), " ",
day(rt), ", ",
year(rt), " ",
" at ",
hour(rt), ":",
minute(rt)
)
rt
strptime(rt)
rt <- as_datetime(msg[1,1])
rt <- ymd_hms(msg[1,1])
rt <- as.character.Date(msg[1,1])
rt
rt <- as.character(msg[1,1])
rt
rt <- date(as.character(msg[1,1]))
rt <- as_datetime(as.character(msg[1,1]))
rt <- guess_formats(as.character(msg[1,1]))
rt <- guess_formats((msg[1,1]))
rt <- ymd_hms(2014-05-20 18:00:00)
rt <- ymd_hms("2014-05-20 18:00:00")
paste0(
month(rt,label = TRUE,abbr = FALSE), " ",
day(rt), ", ",
year(rt), " ",
" at ",
hour(rt), ":",
minute(rt)
)
?minute
paste0(
month(rt,label = TRUE,abbr = FALSE), " ",
day(rt), ", ",
year(rt), " ",
" at ",
str_pad(hour(rt),width = 2,side = "left", pad = "0"), ":",
str_pad(minute(rt),width = 2,side = "left", pad = "0")
)
NewCMASImport <- function() { #copies new messages into main sheet
raw <- gs_key("1GnchiRm2TXgQ1TpTGcsCIGggIjEIsd6TeuVyY_s4a3U") #CMAS Alerts
full <- gs_key("1Xw4JefUCS4HHQ0KpvKhr-DjklqzhH3_CeA-zhoAuQfI") #CMAS_Alerts_Processed
msg_last <- gs_read(full) %>%
select(Rec_Time) %>%
tail(1) %>%
as.character() %>%
mdy_hm()
msg <- gs_read(raw) %>%
mutate(Rec_Time = mdy_hm(Rec_Time)) %>%
filter(Rec_Time > msg_last) %>%
mutate(Rec_Time = Rec_Time %>%
paste0(
month(Rec_Time,label = TRUE,abbr = FALSE), " ",
day(Rec_Time), ", ",
year(Rec_Time)," at ",
str_pad(hour(Rec_Time),width = 2,side = "left", pad = "0"), ":",
str_pad(minute(Rec_Time),width = 2,side = "left", pad = "0")
))
gs_add_row(ss = full, ws = 1, input = msg, verbose = TRUE)
}
NewCMASImport()
source('C:/Users/amsilverman/Box Sync/@Project Support/Data_Science/warn_details/_Monthly_Message_Copy.R')
NewCMASImport()
rm(list = ls())
raw <- gs_key("1GnchiRm2TXgQ1TpTGcsCIGggIjEIsd6TeuVyY_s4a3U") #CMAS Alerts
full <- gs_key("1Xw4JefUCS4HHQ0KpvKhr-DjklqzhH3_CeA-zhoAuQfI") #CMAS_Alerts_Processed
msg_last <- gs_read(full) %>%
select(Rec_Time) %>%
tail(1) %>%
as.character() %>%
mdy_hm()
msg_last
msg_last <- gs_read(full) %>%
select(Rec_Time) %>%
tail(1)
msg_last
msg_last %>%
as.character() %>%
mdy_hm()
msg_last %>%
as.character()
msg_last <- gs_read(full) %>%
select(Rec_Time) %>%
tail(1) %>%
as.character() %>%
mdy_hms()
msg_new <- gs_read(raw) %>%
mutate(Rec_Time = mdy_hm(Rec_Time)) %>%
filter(Rec_Time > msg_last) %>%
mutate(Rec_Time =
paste0(
month(Rec_Time,label = TRUE,abbr = FALSE), " ",
day(Rec_Time), ", ",
year(Rec_Time)," at ",
str_pad(hour(Rec_Time),width = 2,side = "left", pad = "0"), ":",
str_pad(minute(Rec_Time),width = 2,side = "left", pad = "0")
))
gs_add_row(ss = full, ws = 1, input = msg_new, verbose = TRUE)
source('C:/Users/amsilverman/Box Sync/@Project Support/Data_Science/warn_details/CMAS_Clean_shiny.R', encoding = 'UTF-8')
runApp()
?bins
?ggplot2?colorBin
?colorBin
shinyjs:::colourPickerAddin()
quantile(alert_tally$AMBER)
quantile(alert_tally$AMBER, probs = 9)
quantile(alert_tally$AMBER, probs = seq(0,1,.1))
runApp()
cut(alert_tally$AMBER,breaks = 8,include.lowest = TRUE)
runApp()
max(alert_tally$Total)
cut_number(alert_tally$Total, n = 9)
cut_number(alert_tally$Total, n = 9) %>% levels()
?cut_number
table(cut_interval(1:100, 10))
table(cut_interval(1:100, 11))
table(cut_interval(alert_tally$Total), 9)
table(cut_interval(alert_tally$Total, 9))
table(cut_width(alert_tally$Total, 9))
table(cut_width(alert_tally$Total, 9, closed = "right"))
table(cut_number(alert_tally$Total, 9))
levels(cut_number(alert_tally$Total, 9))
?split
levels(cut_interval(alert_tally$Total, 9))
runApp()
levels(cut_number(alert_tally$Total, 9))[,2]
levels(cut_number(alert_tally$Total, 9)) %>% dim()
levels(cut_number(alert_tally$Total, 9))
runApp()
?pie
summarize_all(alert_tally, sum)
ungroup(alert_tally)
alert_tally %>% summarize_at(AMBER, FlashFlood, Hurricane, Other, Tornado, Total, sum)
alert_tally %>% summarize(sum)
alert_tally %>% summarize_at(vars(AMBER:Total), sum, na.rm = TRUE)
alert_tally %>% ungroup() %>% summarize_at(vars(AMBER:Total),sum)
alert_tally %>% ungroup() %>% summarize_at(vars(AMBER:Tornado),sum) %>% pie()
all_tally <- alert_tally %>% ungroup() %>% summarize_at(vars(AMBER:Tornado),sum)
?pie
pie
all_tally
all_tally %>% as.vector() %>% pie()
all_tally %>% as.vector()
pie(all_tally)
all_tally < 0
plot(all_tally)
hist(all_tally)
hist(as.numeric(all_tally))
barplot(all_tally)
barplot(as_vector(all_tally))
pie(as_vector(all_tally))
filter(alert_tally, AMBER:Tornado) %>% pie()
filter(alert_tally, GEOID == 10005) %>% select(AMBER:Tornado) %>% pie()
filter(alert_tally, GEOID == 10005) %>% select(AMBER:Tornado) %>% as_vector() %>% pie()
filter(alert_tally, GEOID == 10005) %>% select(AMBER:Tornado)
filter(alert_tally, GEOID == 10005) %>% select(AMBER:Tornado) %>% ungroup() %>% as_vector() %>% pie()
filter(alert_tally, GEOID == 10005) %>% select(AMBER:Tornado) %>% ungroup()
filter(alert_tally, GEOID == 10005) %>% ungroup() %>% select(AMBER:Tornado) %>% pie()
filter(alert_tally, GEOID == 10005) %>% ungroup() %>% select(AMBER:Tornado) %>% as_vector() %>% pie()
runApp()
allCounties <- left_join(counties_sf, alert_tally)
counties_sf <- read_sf(c_shp[grep("shp$", c_shp)]) %>%
as.data.frame() %>% #to fix July 25 problem with the join.sf methods
left_join(state_iso) %>%
inner_join(lsad_lookup()) %>%
select(STATEFP, COUNTYFP, GEOID, NAME, description, iso_3166_2, geometry) %>%
st_sf() %>%
st_transform('+proj=longlat +datum=WGS84')
c_shp <- unzip("data/county_shape_file.zip", exdir = "data")
counties_sf <- read_sf(c_shp[grep("shp$", c_shp)]) %>%
as.data.frame() %>% #to fix July 25 problem with the join.sf methods
left_join(state_iso) %>%
inner_join(lsad_lookup()) %>%
select(STATEFP, COUNTYFP, GEOID, NAME, description, iso_3166_2, geometry) %>%
st_sf() %>%
st_transform('+proj=longlat +datum=WGS84')
counties_sf <- read_sf(c_shp[grep("shp$", c_shp)]) %>%
as.data.frame() %>% #to fix July 25 problem with the join.sf methods
left_join(state_iso) %>%
inner_join(lsad_lookup()) %>%
select(STATEFP, COUNTYFP, GEOID, NAME, description, iso_3166_2, geometry) %>%
st_sf() %>%
st_transform('+proj=longlat +datum=WGS84')
allCounties <- left_join(counties_sf, alert_tally)
filter(allCounties, GEOID == 39131) %>%
as.data.frame() %>%
ungroup() %>%
select(AMBER:Tornado) %>%
as.vector() %>%
pie()
filter(allCounties, GEOID == 39131) %>%
as.data.frame() %>%
ungroup() %>%
select(AMBER:Tornado) %>%
as_vector() %>%
pie()
runApp()
allCounties %>%
as.data.frame() %>%
ungroup() %>%
select(AMBER:Tornado) %>%
summarize_all(sum) %>%
pie(labels = ~paste(names(.,"\n", ., sep="")))
allCounties %>%
as.data.frame() %>%
ungroup() %>%
select(AMBER:Tornado) %>%
summarize_all(sum) %>%
as_vector() %>%
pie(labels = ~paste(names(.,"\n", ., sep="")))
allCounties %>%
as.data.frame() %>%
ungroup() %>%
select(AMBER:Tornado) %>%
summarize_all(sum) %>%
as_vector() %>%
pie()
allCounties %>%
as.data.frame() %>%
ungroup() %>%
select(AMBER:Tornado) %>%
summarize_all(sum)
allCounties %>%
as.data.frame() %>%
ungroup()
allCounties %>%
as.data.frame() %>%
ungroup() %>%
select(AMBER:Tornado)
allCounties %>%
as.data.frame() %>%
ungroup() %>%
select(AMBER:Tornado) %>%
summarize_all(sum)
allCounties %>%
as.data.frame() %>%
ungroup() %>%
select(AMBER:Tornado) %>%
summarize_all(sum, na.rm = TRUE)
allCounties %>%
as.data.frame() %>%
ungroup() %>%
select(AMBER:Tornado) %>%
summarize_all(sum, na.rm = TRUE) %>%
as_vector() %>%
pie(labels = ~paste(names(.,"\n", ., sep="")))
allCounties %>%
as.data.frame() %>%
ungroup() %>%
select(AMBER:Tornado) %>%
summarize_all(sum, na.rm = TRUE) %>%
as_vector() %>%
pie(labels = paste(names(.,"\n", ., sep="")))
allCounties %>%
as.data.frame() %>%
ungroup() %>%
select(AMBER:Tornado) %>%
summarize_all(sum, na.rm = TRUE) %>%
as_vector() %>%
pie()
smry <- allCounties %>%
as.data.frame() %>%
ungroup() %>%
select(AMBER:Tornado) %>%
summarize_all(sum, na.rm = TRUE) %>%
as_vector()
smry
round(smry/sum(smry[2,]*100)
,2)
smry[2,]
smry
sum(smry)
round(smry/sum(smry*100)
round(smry/sum(smry*100))
lbls <- paste(names(smry), round(smry/sum(smry*100),digits = 2))
lbls
smry/sum(smry)
lbls <- paste(names(smry), round(smry/sum(smry)*100),digits = 2))
lbls <- paste(names(smry), round(smry/sum(smry)*100,digits = 2))
lbls
smry <- allCounties %>%
as.data.frame() %>%
ungroup() %>%
select(AMBER:Tornado) %>%
summarize_all(sum, na.rm = TRUE) %>%
as_vector()
lbls <- paste(names(smry)
, round(smry/sum(smry)*100,digits = 2)
, "%")
pie(smry, labels = lbls)
runApp()
smry
smry[1,]
smry[1,1]
smry[[1,1]]
class(smry)
smry %>% as.tibble()
smry %>% as_tibble()
smry %>% as_tibble() %>% names()
smry %>% as_tibble() %>% row.names()
smry %>% tribble()
smry %>% tribble(~row.names())
runApp()
source('C:/Users/amsilverman/Box Sync/@Project Support/Data_Science/warn_details/leaflet.R')
install.packages("htmlTable")
source('C:/Users/amsilverman/Box Sync/@Project Support/Data_Science/warn_details/leaflet.R')
rm(list = ls())
source('C:/Users/amsilverman/Box Sync/@Project Support/Data_Science/warn_details/leaflet.R')
counties_sf <- read_sf(c_shp[grep("shp$", c_shp)]) %>% #pulls the shp file from the zip
left_join(state_iso) %>%
st_transform('+proj=longlat +datum=WGS84') %>%
inner_join(lsad_lookup())
counties_sf <- read_sf(c_shp[grep("shp$", c_shp)]) %>% #pulls the shp file from the zip
as.data.frame() %>%
left_join(state_iso) %>%
st_transform('+proj=longlat +datum=WGS84') %>%
inner_join(lsad_lookup())
source('C:/Users/amsilverman/Box Sync/@Project Support/Data_Science/warn_details/leaflet.R')
rm(list = ls())
source('C:/Users/amsilverman/Box Sync/@Project Support/Data_Science/warn_details/leaflet.R', echo=TRUE)
counties_sf <- read_sf(c_shp[grep("shp$", c_shp)]) %>% #pulls the shp file from the zip
as.data.frame() %>%
left_join(state_iso) %>%
inner_join(lsad_lookup()) %>%
select(STATEFP, COUNTYFP, GEOID, NAME, description, iso_3166_2, geometry) %>%
st_sf() %>%
st_transform('+proj=longlat +datum=WGS84')
source('C:/Users/amsilverman/Box Sync/@Project Support/Data_Science/warn_details/leaflet.R')
p
source('C:/Users/amsilverman/Box Sync/@Project Support/Data_Science/warn_details/leaflet.R')
p
msg_last <- gs_read(full) %>%
select(Rec_Time) %>%
tail(1) %>%
as.character() %>%
mdy_hms()
source('C:/Users/amsilverman/Box Sync/@Project Support/Data_Science/warn_details/_Monthly_Message_Copy.R')
NewCMASImport()
raw <- gs_key("1GnchiRm2TXgQ1TpTGcsCIGggIjEIsd6TeuVyY_s4a3U") #CMAS Alerts
full <- gs_key("1Xw4JefUCS4HHQ0KpvKhr-DjklqzhH3_CeA-zhoAuQfI") #CMAS_Alerts_Processed
msg_last <- gs_read(full) %>%
select(Rec_Time) %>%
tail(1) %>%
as.character() %>%
mdy_hms()
msg_last <- gs_read(full) %>%
select(Rec_Time) %>%
tail(1)
msg_last <- gs_read(full) %>%
select(Rec_Time) %>%
tail(1) %>%
#as.character() %>%
mdy_hms()
msg_last <- gs_read(full) %>%
select(Rec_Time) %>%
tail(1)
msg_last <- gs_read(full) %>%
select(Rec_Time) %>%
tail(1) %>%
stringr::str_replace(" at ",", ")%>%
#as.character()
mdy_hms()
msg_last <- gs_read(full) %>%
select(Rec_Time) %>%
tail(1) %>%
stringr::str_replace(" at ",", ")
msg_last <- gs_read(full) %>%
select(Rec_Time) %>%
tail(1) %>%
as.character() %>%
mdy_hm()
NewCMASImport <- function() { #copies new messages into main sheet
raw <- gs_key("1GnchiRm2TXgQ1TpTGcsCIGggIjEIsd6TeuVyY_s4a3U") #CMAS Alerts
full <- gs_key("1Xw4JefUCS4HHQ0KpvKhr-DjklqzhH3_CeA-zhoAuQfI") #CMAS_Alerts_Processed
msg_last <- gs_read(full) %>%
select(Rec_Time) %>%
tail(1) %>%
as.character() %>%
mdy_hm()
msg_new <- gs_read(raw) %>%
mutate(Rec_Time = mdy_hm(Rec_Time)) %>%
filter(Rec_Time > msg_last) %>%
mutate(Rec_Time =
paste0(
month(Rec_Time,label = TRUE,abbr = FALSE), " ",
day(Rec_Time), ", ",
year(Rec_Time)," at ",
str_pad(hour(Rec_Time),width = 2,side = "left", pad = "0"), ":",
str_pad(minute(Rec_Time),width = 2,side = "left", pad = "0")
))
gs_add_row(ss = full, ws = 1, input = msg_new, verbose = TRUE)
}
NewCMASImport()
msg_new <- gs_read(raw) %>%
mutate(Rec_Time = mdy_hm(Rec_Time)) %>%
filter(Rec_Time > msg_last) %>%
mutate(Rec_Time =
paste0(
month(Rec_Time,label = TRUE,abbr = FALSE), " ",
day(Rec_Time), ", ",
year(Rec_Time)," at ",
stringr::str_pad(hour(Rec_Time),width = 2,side = "left", pad = "0"), ":",
stringr::str_pad(minute(Rec_Time),width = 2,side = "left", pad = "0")
))
source('C:/Users/amsilverman/Box Sync/@Project Support/Data_Science/warn_details/_Monthly_Message_Copy.R')
rm(list = ls())
NewCMASImport()
source('C:/Users/amsilverman/Box Sync/@Project Support/Data_Science/warn_details/_Monthly_Message_Copy.R')
NewCMASImport()
raw <- gs_key("1GnchiRm2TXgQ1TpTGcsCIGggIjEIsd6TeuVyY_s4a3U") #CMAS Alerts
dim(raw)
msg_new <- gs_read(raw)
rm(msg_new)
shiny::runApp()
runApp()
state.area
state.center
tbl(state.center)
tibble(state.center)
as_tibble(state.center[[1]], state.center[[2]])
tibble(long = state.center[[1]],lat = state.center[[2]])
c_shp <- unzip("data/county_shape_file.zip", exdir = "data")
c_shp
source('C:/Users/amsilverman/Box Sync/@Project Support/Data_Science/warn_details/_Monthly_Message_Copy.R')
source('C:/Users/amsilverman/Box Sync/@Project Support/Data_Science/warn_details/app.R')
runApp()
library(leaflet)
source('C:/Users/amsilverman/Box Sync/@Project Support/Data_Science/warn_details/leaflet.R')
q()
